[ClassVersion("1.0.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group's name that is the target of the assignment.")] String GroupName;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSapplistitem
{
    [Write, Description("To see a list of bundle IDs for common built-in iOS apps, see the
Intune documentation. Add managed Intune apps from the Software Node.")] String appId;
    [Write, Description("URL of app for kiosk mode, e.g. https://itunes.apple.com/us/app/work-folders/id950878067?mt=8")] String appStoreUrl;
    [Write, Description("")] String name;
    [Write, Description("")] String publisher;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingaustralia
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","mature","agesAbove15","agesAbove18"}, Values{"allAllowed","allBlocked","general","parentalGuidance","mature","agesAbove15","agesAbove18"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","preschoolers","children","general","parentalGuidance","mature","agesAbove15","agesAbove15AdultViolence"}, Values{"allAllowed","allBlocked","preschoolers","children","general","parentalGuidance","mature","agesAbove15","agesAbove15AdultViolence"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingcanada
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","agesAbove14","agesAbove18","restricted"}, Values{"allAllowed","allBlocked","general","parentalGuidance","agesAbove14","agesAbove18","restricted"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","children","childrenAbove8","general","parentalGuidance","agesAbove14","agesAbove18"}, Values{"allAllowed","allBlocked","children","childrenAbove8","general","parentalGuidance","agesAbove14","agesAbove18"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingfrance
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","agesAbove10","agesAbove12","agesAbove16","agesAbove18"}, Values{"allAllowed","allBlocked","agesAbove10","agesAbove12","agesAbove16","agesAbove18"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","agesAbove10","agesAbove12","agesAbove16","agesAbove18"}, Values{"allAllowed","allBlocked","agesAbove10","agesAbove12","agesAbove16","agesAbove18"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratinggermany
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","agesAbove6","agesAbove12","agesAbove16","adults"}, Values{"allAllowed","allBlocked","general","agesAbove6","agesAbove12","agesAbove16","adults"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","agesAbove6","agesAbove12","agesAbove16","adults"}, Values{"allAllowed","allBlocked","general","agesAbove6","agesAbove12","agesAbove16","adults"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingireland
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","agesAbove12","agesAbove15","agesAbove16","adults"}, Values{"allAllowed","allBlocked","general","parentalGuidance","agesAbove12","agesAbove15","agesAbove16","adults"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","children","youngAdults","parentalSupervision","mature"}, Values{"allAllowed","allBlocked","general","children","youngAdults","parentalSupervision","mature"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingjapan
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","agesAbove15","agesAbove18"}, Values{"allAllowed","allBlocked","general","parentalGuidance","agesAbove15","agesAbove18"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","explicitAllowed"}, Values{"allAllowed","allBlocked","explicitAllowed"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingnewzealand
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","mature","agesAbove13","agesAbove15","agesAbove16","agesAbove18","restricted","agesAbove16Restricted"}, Values{"allAllowed","allBlocked","general","parentalGuidance","mature","agesAbove13","agesAbove15","agesAbove16","agesAbove18","restricted","agesAbove16Restricted"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","adults"}, Values{"allAllowed","allBlocked","general","parentalGuidance","adults"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingunitedkingdom
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","universalChildren","parentalGuidance","agesAbove12Video","agesAbove12Cinema","agesAbove15","adults"}, Values{"allAllowed","allBlocked","general","universalChildren","parentalGuidance","agesAbove12Video","agesAbove12Cinema","agesAbove15","adults"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","caution"}, Values{"allAllowed","allBlocked","caution"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingunitedstates
{
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","general","parentalGuidance","parentalGuidance13","restricted","adults"}, Values{"allAllowed","allBlocked","general","parentalGuidance","parentalGuidance13","restricted","adults"}] String movieRating;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","childrenAll","childrenAbove7","general","parentalGuidance","childrenAbove14","adults"}, Values{"allAllowed","allBlocked","childrenAll","childrenAbove7","general","parentalGuidance","childrenAbove14","adults"}] String tvRating;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSiosnetworkusagerule
{
    [Write, Description("")] Boolean cellularDataBlocked;
    [Write, Description("")] Boolean cellularDataBlockWhenRoaming;
    [Write, Description("Block managed apps from syncing to cloud.  ")] String managedApps[];
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSsettingstatedevicesummary
{
    [Write, Description("")] UInt32 CompliantDeviceCount;
    [Write, Description("")] UInt32 ConflictDeviceCount;
    [Write, Description("")] UInt32 ErrorDeviceCount;
    [Write, Description("")] String InstancePath;
    [Write, Description("")] UInt32 NonCompliantDeviceCount;
    [Write, Description("")] UInt32 NotApplicableDeviceCount;
    [Write, Description("")] UInt32 RemediatedDeviceCount;
    [Write, Description("")] String SettingName;
    [Write, Description("")] UInt32 UnknownDeviceCount;
    [Write, Description("To see a list of bundle IDs for common built-in iOS apps, see the
Intune documentation. Add managed Intune apps from the Software Node. ")] String Id;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSdeviceconfigurationdevicestatus
{
    [Write, Description("")] String ComplianceGracePeriodExpirationDateTime;
    [Write, Description("")] String DeviceDisplayName;
    [Write, Description("")] String DeviceModel;
    [Write, Description("")] String LastReportedDateTime;
    [Write, Description("")] String Status;
    [Write, Description("")] String UserName;
    [Write, Description("")] String UserPrincipalName;
    [Write, Description("To see a list of bundle IDs for common built-in iOS apps, see the
Intune documentation. Add managed Intune apps from the Software Node. ")] String Id;
};
[ClassVersion("1.0.0")]
class MSFT_IntuneDeviceConfigurationPolicyiOSdeviceconfigurationuserstatus
{
    [Write, Description("")] UInt32 DevicesCount;
    [Write, Description("")] String LastReportedDateTime;
    [Write, Description("")] String Status;
    [Write, Description("")] String UserDisplayName;
    [Write, Description("")] String UserPrincipalName;
    [Write, Description("To see a list of bundle IDs for common built-in iOS apps, see the
Intune documentation. Add managed Intune apps from the Software Node. ")] String Id;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneDeviceConfigurationPolicyiOS")]
class MSFT_IntuneDeviceConfigurationPolicyiOS : OMI_BaseResource
{
    [Write, Description("To see a list of bundle IDs for common built-in iOS apps, see the
Intune documentation. Add managed Intune apps from the Software Node.")] String Id;
    [Write, Description("")] String Description;
    [Write, Description("")] String DisplayName;
    [Write, Description("")] Boolean AccountBlockModification;
    [Write, Description("Activation Lock makes it harder for a lost or stolen device to be reactivated.")] Boolean ActivationLockAllowWhenSupervised;
    [Write, Description("")] Boolean AirDropBlocked;
    [Write, Description("Force AirDrop to be considered an unmanaged drop target.")] Boolean AirDropForceUnmanagedDropTarget;
    [Write, Description("Force requiring a pairing password for outgoing AirPlay requests.")] Boolean AirPlayForcePairingPasswordForOutgoingRequests;
    [Write, Description("")] Boolean AppleNewsBlocked;
    [Write, Description("")] Boolean AppleWatchBlockPairing;
    [Write, Description("Force paired Apple watch to use wrist detection.")] Boolean AppleWatchForceWristDetection;
    [Write, Description("Apps you add to this list and assign to a device can lock the device to run only that app once launched, or lock the device while a certain action is running (for example, taking a test). Once the action is complete, or you remove the restriction, the device returns to its normal state."), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSapplistitem")] String AppsSingleAppModeList[];
    [Write, Description("Blocks automatic downloading of apps purchased on other devices. Does not affect updates to existing apps.")] Boolean AppStoreBlockAutomaticDownloads;
    [Write, Description("For supervised devices as of iOS 13.0.")] Boolean AppStoreBlocked;
    [Write, Description("")] Boolean AppStoreBlockInAppPurchases;
    [Write, Description("Block App Store from Home Screen. Users may continue to use iTunes or Apple Configurator to install or update apps.")] Boolean AppStoreBlockUIAppInstallation;
    [Write, Description("Users must enter Apple ID password for each in-app and iTunes purchase.")] Boolean AppStoreRequirePassword;
    [Write, Description("Enter the iTunes App Store URL of the app you want. For example, to specify the Microsoft Work Folders app for iOS, enter https://itunes.apple.com/us/app/work-folders/id950878067?mt=8. To find the URL of an app, use a search engine to locate the store page. For example, to find the Work Folders app, you could search Microsoft Work Folders ITunes."), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSapplistitem")] String AppsVisibilityList[];
    [Write, Description("Set whether the list is a list of apps to hide or a list of apps to make visible."), ValueMap{"none","appsInListCompliant","appsNotInListCompliant"}, Values{"none","appsInListCompliant","appsNotInListCompliant"}] String AppsVisibilityListType;
    [Write, Description("Block modification of Bluetooth settings. To use this setting, the device must be in supervised mode (iOS 10.0+).")] Boolean BluetoothBlockModification;
    [Write, Description("")] Boolean CameraBlocked;
    [Write, Description("Block data roaming over the cellular network. This won't show in the device's management profile, but a block will be enforced for data roaming every time the device checks in (typically every 8 hours).")] Boolean CellularBlockDataRoaming;
    [Write, Description("Block global background fetch while roaming over the cellular network.")] Boolean CellularBlockGlobalBackgroundFetchWhileRoaming;
    [Write, Description("Block changes to app cellular data usage settings.")] Boolean CellularBlockPerAppDataModification;
    [Write, Description("This value is available only with certain carriers. This won't show in the device's management profile, but a block will be enforced for personal hotspot every time the device checks in (typically every 8 hours). Block modification of personal hotspot in addition to this setting to ensure personal hotspot will always be blocked.")] Boolean CellularBlockPersonalHotspot;
    [Write, Description("Block voice roaming over the cellular network.")] Boolean CellularBlockVoiceRoaming;
    [Write, Description("Block untrusted Transport Layer Security (TLS) certificates.")] Boolean CertificatesBlockUntrustedTlsCertificates;
    [Write, Description("Block remote screen observation by Classroom app. To use this setting, the device must be in supervised mode (iOS 9.3+).")] Boolean ClassroomAppBlockRemoteScreenObservation;
    [Write, Description("Student devices enrolled in a class via the Classroom app will automatically give permission to that course's teacher to silently observe the student's screen.")] Boolean ClassroomAppForceUnpromptedScreenObservation;
    [Write, Description("Device compliance can be viewed in the Restricted Apps Compliance report."), ValueMap{"none","appsInListCompliant","appsNotInListCompliant"}, Values{"none","appsInListCompliant","appsNotInListCompliant"}] String CompliantAppListType;
    [Write, Description("Enter the iTunes App Store URL of the app you want. For example, to specify the Microsoft Work Folders app for iOS, enter https://itunes.apple.com/us/app/work-folders/id950878067?mt=8. To find the URL of an app, use a search engine to locate the store page. For example, to find the Work Folders app, you could search Microsoft Work Folders ITunes."), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSapplistitem")] String CompliantAppsList[];
    [Write, Description("")] Boolean ConfigurationProfileBlockChanges;
    [Write, Description("")] Boolean DefinitionLookupBlocked;
    [Write, Description("On iOS 12.0 and later, this blocks users from setting their own Screen Time settings, which includes device restrictions. On iOS 11.4.1 and earlier, this blocks the user from enabling restrictions in the device settings. The blocking effect is the same on any supervised iOS device.")] Boolean DeviceBlockEnableRestrictions;
    [Write, Description("Block the use of the erase all content and settings option on the device.")] Boolean DeviceBlockEraseContentAndSettings;
    [Write, Description("")] Boolean DeviceBlockNameModification;
    [Write, Description("Block the device from sending diagnostic and usage telemetry data.")] Boolean DiagnosticDataBlockSubmission;
    [Write, Description("Block the modification of the diagnostic submission and app analytics settings in the Diagnostics and Usage pane in Settings. To use this setting, the device must be in supervised mode (iOS 9.3.2+).")] Boolean DiagnosticDataBlockSubmissionModification;
    [Write, Description("")] Boolean DocumentsBlockManagedDocumentsInUnmanagedApps;
    [Write, Description("")] Boolean DocumentsBlockUnmanagedDocumentsInManagedApps;
    [Write, Description("Emails that the user sends or receives which don't match the domains you specify here will be marked as untrusted.")] String EmailInDomainSuffixes[];
    [Write, Description("Removes the Trust Enterprise Developer button in Settings->General->Profiles & Device Management.")] Boolean EnterpriseAppBlockTrust;
    [Write, Description("Block the changing of enterprise app trust settings.")] Boolean EnterpriseAppBlockTrustModification;
    [Write, Description("")] Boolean FaceTimeBlocked;
    [Write, Description("Block changes to the Find My Friends app settings.")] Boolean FindMyFriendsBlocked;
    [Write, Description("")] Boolean GameCenterBlocked;
    [Write, Description("Block adding Game Center friends. For supervised devices as of iOS 13.0.")] Boolean GamingBlockGameCenterFriends;
    [Write, Description("For supervised devices as of iOS 13.0.")] Boolean GamingBlockMultiplayer;
    [Write, Description("Host pairing allows you to control which devices the device can pair with.")] Boolean HostPairingBlocked;
    [Write, Description("")] Boolean IBooksStoreBlocked;
    [Write, Description("User will not be able to download media from the iBook store that has been tagged as erotica.")] Boolean IBooksStoreBlockErotica;
    [Write, Description("Handoff lets users start work on one iOS device, and continue it on another MacOS or iOS device.")] Boolean ICloudBlockActivityContinuation;
    [Write, Description("Block backing up device to iCloud.")] Boolean ICloudBlockBackup;
    [Write, Description("Blocks iCloud from syncing documents and data.")] Boolean ICloudBlockDocumentSync;
    [Write, Description("Block managed apps from syncing to cloud.")] Boolean ICloudBlockManagedAppsSync;
    [Write, Description("Any photos not fully downloaded from iCloud Photo Library to device will be removed from local storage.")] Boolean ICloudBlockPhotoLibrary;
    [Write, Description("Block photo stream syncing to iCloud.")] Boolean ICloudBlockPhotoStreamSync;
    [Write, Description("Block shared photo streaming. Blocking can cause data loss.")] Boolean ICloudBlockSharedPhotoStream;
    [Write, Description("Require encryption on device backup.")] Boolean ICloudRequireEncryptedBackup;
    [Write, Description("Block explicit iTunes music, podcast, and news content from iTunes. For supervised devices as of 13.0.")] Boolean ITunesBlockExplicitContent;
    [Write, Description("Block Music service. If true, Music app reverts to classic mode and Music service is disabled.")] Boolean ITunesBlockMusicService;
    [Write, Description("")] Boolean ITunesBlockRadio;
    [Write, Description("")] Boolean KeyboardBlockAutoCorrect;
    [Write, Description("")] Boolean KeyboardBlockDictation;
    [Write, Description("")] Boolean KeyboardBlockPredictive;
    [Write, Description("")] Boolean KeyboardBlockShortcuts;
    [Write, Description("")] Boolean KeyboardBlockSpellCheck;
    [Write, Description("")] Boolean KioskModeAllowAssistiveSpeak;
    [Write, Description("Users can turn AssistiveTouch on or off.")] Boolean KioskModeAllowAssistiveTouchSettings;
    [Write, Description("Kiosk mode allow auto lock")] Boolean KioskModeAllowAutoLock;
    [Write, Description("Users can turn invert colors on or off.")] Boolean KioskModeAllowColorInversionSettings;
    [Write, Description("Kiosk mode allow ringer switch")] Boolean KioskModeAllowRingerSwitch;
    [Write, Description("Kiosk mode allow screen rotation")] Boolean KioskModeAllowScreenRotation;
    [Write, Description("Kiosk mode allow sleep button")] Boolean KioskModeAllowSleepButton;
    [Write, Description("Kiosk mode allow touchscreen")] Boolean KioskModeAllowTouchscreen;
    [Write, Description("Users can turn VoiceOver on or off.")] Boolean KioskModeAllowVoiceOverSettings;
    [Write, Description("Kiosk mode allow volume buttons")] Boolean KioskModeAllowVolumeButtons;
    [Write, Description("Users can turn zoom on or off.")] Boolean KioskModeAllowZoomSettings;
    [Write, Description("URL of app for kiosk mode, e.g. https://itunes.apple.com/us/app/work-folders/id950878067?mt=8")] String KioskModeAppStoreUrl;
    [Write, Description("To see a list of bundle IDs for common built-in iOS apps, see the
Intune documentation.")] String KioskModeBuiltInAppId;
    [Write, Description("Add managed Intune apps from the Software Node.")] String KioskModeManagedAppId;
    [Write, Description("")] Boolean KioskModeRequireAssistiveTouch;
    [Write, Description("")] Boolean KioskModeRequireColorInversion;
    [Write, Description("")] Boolean KioskModeRequireMonoAudio;
    [Write, Description("")] Boolean KioskModeRequireVoiceOver;
    [Write, Description("")] Boolean KioskModeRequireZoom;
    [Write, Description("")] Boolean LockScreenBlockControlCenter;
    [Write, Description("")] Boolean LockScreenBlockNotificationView;
    [Write, Description("")] Boolean LockScreenBlockPassbook;
    [Write, Description("")] Boolean LockScreenBlockTodayView;
    [Write, Description(""), ValueMap{"allAllowed","allBlocked","agesAbove4","agesAbove9","agesAbove12","agesAbove17"}, Values{"allAllowed","allBlocked","agesAbove4","agesAbove9","agesAbove12","agesAbove17"}] String MediaContentRatingApps;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingaustralia")] String MediaContentRatingAustralia;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingcanada")] String MediaContentRatingCanada;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingfrance")] String MediaContentRatingFrance;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratinggermany")] String MediaContentRatingGermany;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingireland")] String MediaContentRatingIreland;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingjapan")] String MediaContentRatingJapan;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingnewzealand")] String MediaContentRatingNewZealand;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingunitedkingdom")] String MediaContentRatingUnitedKingdom;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSmediacontentratingunitedstates")] String MediaContentRatingUnitedStates;
    [Write, Description("")] Boolean MessagesBlocked;
    [Write, Description("If you don't add any managed apps, the configured settings will apply to all managed apps by default. If you add specific managed apps, the configured settings will apply to only those apps."), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSiosnetworkusagerule")] String NetworkUsageRules[];
    [Write, Description("")] Boolean NotificationsBlockSettingsModification;
    [Write, Description("Block users from adding, changing, or removing fingerprints and faces. Face ID is avaliable in iOS 11.0 and later.")] Boolean PasscodeBlockFingerprintModification;
    [Write, Description("Face ID is avaliable on iOS 11.0 and later.")] Boolean PasscodeBlockFingerprintUnlock;
    [Write, Description("Block passcode from being added, changed or removed. Changes to passcode restrictions will be ignored on supervised devices after blocking passcode modification.")] Boolean PasscodeBlockModification;
    [Write, Description("Block simple password sequences, such as 1234 or 1111.")] Boolean PasscodeBlockSimple;
    [Write, Description("Number of days until device password must be changed. (1-65535)")] UInt32 PasscodeExpirationDays;
    [Write, Description("Minimum number (0-4) of non-alphanumeric characters, such as #, %, !, etc., required in the password. The default value is 0.")] UInt32 PasscodeMinimumCharacterSetCount;
    [Write, Description("Minimum number of digits or characters in password. (4-14)")] UInt32 PasscodeMinimumLength;
    [Write, Description("Set to 0 to require a password immediately. There is no maximum number of minutes, and this number overrides the number currently set on the device. (This compliance check is supported for devices with OS versions iOS 8.0 and above)")] UInt32 PasscodeMinutesOfInactivityBeforeLock;
    [Write, Description("Set to 0 to use the device's minimum possible value. This number (0-60) overrides the number currently set on the device. If set to Immediately, devices will use the minimum possible value per device.")] UInt32 PasscodeMinutesOfInactivityBeforeScreenTimeout;
    [Write, Description("Number of new passwords that must be used until an old one can be reused. (1-24)")] UInt32 PasscodePreviousPasscodeBlockCount;
    [Write, Description("In addition to requiring a password on all devices, this setting enforces a non-simple, 6-digit password requirement (regardless of other password settings you configure) on devices that are enrolled with Apple user enrollment.")] Boolean PasscodeRequired;
    [Write, Description(""), ValueMap{"deviceDefault","alphanumeric","numeric"}, Values{"deviceDefault","alphanumeric","numeric"}] String PasscodeRequiredType;
    [Write, Description("Number of consecutive times an incorrect password can be entered before device is wiped of all data. (2-11)")] UInt32 PasscodeSignInFailureCountBeforeWipe;
    [Write, Description("")] Boolean PodcastsBlocked;
    [Write, Description("")] Boolean SafariBlockAutofill;
    [Write, Description("For supervised devices as of iOS 13.0.")] Boolean SafariBlocked;
    [Write, Description("")] Boolean SafariBlockJavaScript;
    [Write, Description("")] Boolean SafariBlockPopups;
    [Write, Description(""), ValueMap{"browserDefault","blockAlways","allowCurrentWebSite","allowFromWebsitesVisited","allowAlways"}, Values{"browserDefault","blockAlways","allowCurrentWebSite","allowFromWebsitesVisited","allowAlways"}] String SafariCookieSettings;
    [Write, Description("Documents downloaded from the URLs you specify here will be considered managed (Safari only).")] String SafariManagedDomains[];
    [Write, Description("Users can save passwords in Safari only from URLs matching the patterns you specify here. To use this setting, the device must be in supervised mode and not configured for multiple users. (iOS 9.3+)")] String SafariPasswordAutoFillDomains[];
    [Write, Description("")] Boolean SafariRequireFraudWarning;
    [Write, Description("")] Boolean ScreenCaptureBlocked;
    [Write, Description("")] Boolean SiriBlocked;
    [Write, Description("")] Boolean SiriBlockedWhenLocked;
    [Write, Description("Block Siri from querying user-generated content from the internet.")] Boolean SiriBlockUserGeneratedContent;
    [Write, Description("Prevents Siri from dictating, or speaking profane language.")] Boolean SiriRequireProfanityFilter;
    [Write, Description("Blocks Spotlight from returning any results from an Internet search.")] Boolean SpotlightBlockInternetResults;
    [Write, Description("")] Boolean VoiceDialingBlocked;
    [Write, Description("Block wallpaper from being changed.")] Boolean WallpaperBlockModification;
    [Write, Description("Force the device to use only Wi-Fi networks set up through configuration profiles.")] Boolean WiFiConnectOnlyToConfiguredNetworks;
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSsettingstatedevicesummary")] String DeviceSettingStateSummaries[];
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSdeviceconfigurationdevicestatus")] String DeviceStatuses[];
    [Write, Description(""), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSdeviceconfigurationuserstatus")] String UserStatuses[];

    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_IntuneDeviceConfigurationPolicyiOSAssignments")] String Assignments[];

    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Intune Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
	[Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
